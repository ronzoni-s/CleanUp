<nav class="navbar navbar-expand-lg navbar-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="/"><img src="/img/logo_white.png" /></a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      @*<ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Home</a>
        </li>
      </ul>*@
      <div class="navbar-nav me-auto mb-2 mb-lg-0"></div>
      <span class="navbar-text">
        <img class="pointer" src="/icons/hamburger.svg" @onclick="ToggleNavMenu" style="width: 40px;"/>
          @*<span class="navbar-hamburger pointer" @onclick="ToggleNavMenu"></span>*@
        @*<a href="" @onclick="Logout" @onclick:preventDefault>Logout</a>*@
      </span>
    </div>
  </div>
</nav>

@if (!collapseNavMenu)
{
    <div id="logout-btn" class="pointer" @onclick="Logout">LOGOUT</div>
}

@code {
    bool collapseNavMenu = true;

    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    async Task Logout()
    {
        cartService.Clear();
        await authenticationManager.Logout();
        navigationManager.NavigateTo("/authenticate");
    }
}