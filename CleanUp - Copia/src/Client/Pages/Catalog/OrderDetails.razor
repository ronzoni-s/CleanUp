@page "/catalog/order-details/{Id:int}"
@attribute [Authorize(Policy = Permissions.Orders.View)]
@inject Microsoft.Extensions.Localization.IStringLocalizer<OrderDetails> _localizer
@using ErbertPranzi.Application.Features.Products.Queries.GetOrderProductsPaged;

<style>
    .mud-checkbox > span.mud-checkbox-primary {
        padding: 8px 8px 8px 8px !important
    }
</style>

<MudBreadcrumbs style="padding-left:0px !important" Items="_breadcrumbItems"></MudBreadcrumbs>

@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{

    <div style="display: flex;">
        <div class="mb-6">
            <div class="mb-6">
                <MudButton Variant="Variant.Outlined" disabled="@PreviousOrderDisabled" OnClick="@(() => GoToPreviousOrder())" StartIcon="@Icons.Material.Filled.ArrowBack" IconColor="Color.Surface" Color="Color.Secondary">Precedente</MudButton>
                <MudButton Variant="Variant.Outlined" disabled="@NextOrderDisabled" OnClick="@(() => GoToNextOrder())" EndIcon="@Icons.Material.Filled.ArrowForward" IconColor="Color.Surface" Color="Color.Secondary">Successivo</MudButton>
            </div>

            <HeroTitle Title="@Title" Description="@Description" AdditionalInformation="@(_contactName + ", "+ _contactPhoneNumber)" />
            <MudElement HtmlTag="p" >
                Totale: @(string.Format("{0:N2} €", order.FinalPrice))
            </MudElement>
        </div>
        <div style="margin-left:auto">
            @if (order.CancellationDateTime is not null)
            {
                <MudChip Icon="@Icons.Filled.Cancel" Label="false" Color="Color.Secondary">Annullato</MudChip>
            }
            else if (order.CompletionDateTime is not null)
            {
                <MudChip Icon="@Icons.Filled.Done" Label="false" Color="Color.Primary">Completato</MudChip>
            }

        </div>
    </div>

    <MudGrid>

        <MudItem xs="12" sm="12" md="12">
            <MudTable class="mb-6" Elevation="25" ServerData="@(new Func<TableState, Task<TableData<GetAllPagedOrderProductsResponse>>>(ServerReload))" Hover="true" Dense="false" Bordered="true" Striped="true" @ref="_table">
                <ToolBarContent>

                    <MudText Typo="Typo.h6">Prodotti</MudText>
                    <MudText class="ml-6">(Totale @(Math.Round(_orderWeight, 2)))</MudText>
                    <MudSpacer />
                    <MudButton DisableElevation Variant="Variant.Filled" OnClick="@(() => PrintProducts())" StartIcon="@Icons.Material.Filled.Print" IconColor="Color.Surface" Color="Color.Primary">Stampa prodotti</MudButton>

                </ToolBarContent>
                <HeaderContent>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="Product.Code">Codice prodotto </MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="Product.Name">Nome</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="MenuId">Menu di appartenenza</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="Quantity">Quantità</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="ProductWeight">Peso</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="Price">Prezzo (€)</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="FinalPrice">Prezzo scontato (€)</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="Tax">Tassa</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel T="GetAllPagedOrderProductsResponse" SortLabel="Product.IsActive">Attivo</MudTableSortLabel></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Code">
                        <MudHighlighter Text="@context.Product.Code" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="Name">
                        <MudHighlighter Text="@context.Product.Name" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="MenuId">
                        <MudHighlighter Text="@(context.MenuId?.ToString() ?? "-")" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="Quantity">
                        <MudHighlighter Text="@(context.Quantity.ToString())" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="Weight">
                        <MudHighlighter Text="@(context.ProductWeight.ToString())" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="Price">
                        <MudHighlighter Text="@(context.Price.ToString())" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="FinalPrice">
                        <MudHighlighter Text="@(context.FinalPrice.ToString())" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="Tax">
                        <MudHighlighter Text="@(context.Tax.ToString())" HighlightedText="@_searchString" />
                    </MudTd>
                    <MudTd DataLabel="IsActive">
                        <MudCheckBox @bind-Checked="@context.Product.IsActive" ReadOnly Color="Color.Secondary"></MudCheckBox>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <TablePager />
                </PagerContent>
            </MudTable>
        </MudItem>
    </MudGrid>

    <HeroTitle Title="Gestione Polibox" 
               Description="@($"Si prevede l'utilizzo di {order.Bags} sacchetti.")"
               AdditionalInformation="@(order.UsedBags == null ? string.Empty : $"Sono stati utilizzati {order.UsedBags} sacchetti.")" />

    <MudGrid>
        @for (int i = 0; _poliboxCards != null && i < _poliboxCards.Count; i++)
        {
            int _i = i;
            <MudItem xs="12" sm="4" md="3">
                <MudPaper Class="pt-8" Elevation="25">
                    <div class="ml-4 mr-4 d-flex justify-space-between">
                        <MudCheckBox @bind-Checked="@(_poliboxCards[_i].Value)" Color="Color.Primary" Typo="Typo.h6">Polibox @(_poliboxCards[_i].Number)</MudCheckBox>
                        <MudIconButton Icon="@Icons.Material.Filled.Print" aria-label="print" @onclick="() => PrintLabel(order.Id, _i)" Disabled="!(_poliboxCards[_i].Value || _poliboxCards[_i].Bags.Where(x => x.Enabled).Any(x => x.Value))"></MudIconButton>
                    </div>
                    <MudList Clickable="false" Dense="true" DisableGutters="false">
                        @for (int k = 0; k < _poliboxCards[_i].Bags.Count; k++)
                        {
                            int _k = k;
                            <MudListItem Dense="true">
                                <MudCheckBox @bind-Checked="@(_poliboxCards[_i].Bags[_k].Value)" Color="Color.Primary" Disabled="@(!_poliboxCards[_i].Bags[_k].Enabled)">Sacchetto @(_poliboxCards[_i].Bags[_k].Number)</MudCheckBox>
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>
            </MudItem>
        }
    </MudGrid>

    <div class="justify-center mud-text-align-center mt-6 mb-6">
        <MudButton DisableElevation Variant="Variant.Filled" Disabled="@(processingCompleteOrder || order.CompletionDateTime != null || order.CancellationDateTime != null)" OnClick="CompleteOrder" Color="Color.Primary">
            @if (processingCompleteOrder)
            { 
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Attendi</MudText>
            }
            else
            {
                <MudText>Completa</MudText>
            }
        </MudButton>

        <MudButton DisableElevation Variant="Variant.Filled" Disabled="@(processingVoidOrder || order.CancellationDateTime != null)" OnClick="VoidOrder" Color="Color.Secondary">
            @if (processingVoidOrder)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Attendi</MudText>
            }
            else
            {
                <MudText>Annulla</MudText>
            }
        </MudButton>

    </div>


}
